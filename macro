#!/usr/bin/env lua
-- Macro: Preprocessing for any text file!
-- By Bowuigi

---- Find preprocessor instructions ----
function ReadFile(filename)
	local fileHandler = io.open(filename)
	local macros = {}
	local content = ""
	for line in fileHandler:lines() do
		local macro_key, macro_val

		macro_key, macro_val = line:match("%%sub \"(.+)\" \"(.+)\"")

		if (macro_key) then
			macros[#macros+1] = {macro_key, macro_val}
		else
			if (#content == 0) then
				content = line
			else
				content = content.."\n"..line
			end
		end
	end

	fileHandler:close()
	return content, macros
end

---- Apply instructions ----
function ApplyInstructions(text, macros)
	if (text == nil or macros == nil) then error("Wrong arguments, they should be a string and a table of {macro_key, macro_value} instructions") end

	local current = text
	for _,v in ipairs(macros) do
		current = current:gsub(v[1], v[2])
	end
	return current
end

if not (arg[1] or arg[2]) then io.stderr:write("Usage: macro [command] file\n") os.exit(1) end

if (arg[2]) then
	local command = arg[1]
	local filename = arg[2]
	local outfilename = os.tmpname()
	local outfile = io.open(outfilename, "w")
	outfile:write(ApplyInstructions(ReadFile(filename)))
	outfile:close()

	os.execute(command.." '"..outfilename.."'")
	os.remove(outfilename)
else
	local filename = arg[1]
	print(ApplyInstructions(ReadFile(filename)))
end
